[{"/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/index.js":"1","/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/App.js":"2","/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/reportWebVitals.js":"3","/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/containers/TriviaBoard/TriviaBoard.js":"4","/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/components/TriviaCategory/TriviaCategory.js":"5","/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/data/CategoryList.js":"6","/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/axios-trivia.js":"7","/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/components/QuizPage/QuizPage.js":"8","/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/components/QuizPage/QuizCompletion/QuizCompletion.js":"9","/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/hoc/Layout/Layout.js":"10","/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/components/Logo/Logo.js":"11","/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/components/Navigation/Toolbar/Toolbar.js":"12","/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/components/Navigation/NavigationItems.js":"13","/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/components/Navigation/NavigationItem/NavigationItem.js":"14","/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/components/UI/Buttons/Buttons.js":"15","/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/components/QuizPage/ProgressBar/ProgressBar.js":"16"},{"size":295,"mtime":1611626933790,"results":"17","hashOfConfig":"18"},{"size":486,"mtime":1611732246503,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1611543208552,"results":"20","hashOfConfig":"18"},{"size":1451,"mtime":1611775125045,"results":"21","hashOfConfig":"18"},{"size":1322,"mtime":1611782144410,"results":"22","hashOfConfig":"18"},{"size":1361,"mtime":1611781474165,"results":"23","hashOfConfig":"18"},{"size":160,"mtime":1611606845288,"results":"24","hashOfConfig":"18"},{"size":4540,"mtime":1611782622204,"results":"25","hashOfConfig":"18"},{"size":1022,"mtime":1611773946101,"results":"26","hashOfConfig":"18"},{"size":324,"mtime":1611731388217,"results":"27","hashOfConfig":"18"},{"size":274,"mtime":1611729147683,"results":"28","hashOfConfig":"18"},{"size":493,"mtime":1611731013810,"results":"29","hashOfConfig":"18"},{"size":350,"mtime":1611730852923,"results":"30","hashOfConfig":"18"},{"size":379,"mtime":1611730920477,"results":"31","hashOfConfig":"18"},{"size":215,"mtime":1611772612256,"results":"32","hashOfConfig":"18"},{"size":650,"mtime":1611781001792,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1sld6xv",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/index.js",[],["70","71"],"/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/App.js",[],"/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/reportWebVitals.js",[],["72","73"],"/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/containers/TriviaBoard/TriviaBoard.js",[],"/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/components/TriviaCategory/TriviaCategory.js",[],"/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/data/CategoryList.js",[],"/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/axios-trivia.js",[],"/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/components/QuizPage/QuizPage.js",["74"],"import React, { Component } from \"react\";\nimport axios from \"../../axios-trivia\";\nimport localStyles from \"./QuizPage.module.css\";\nimport globalStyles from \"../../assets/global-styles/bootstrap.min.module.css\"\nimport cx from 'classnames'\nimport QuizCompletion from \"../QuizPage/QuizCompletion/QuizCompletion\";\nimport ProgressBar from \"./ProgressBar/ProgressBar\"\n\nfunction shuffle(array) {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nclass QuizPage extends Component {\n  state = {\n    score: 0,\n    questions: [],\n    viewingQuestion: \"\",\n    correctAnswer: \"\",\n    viewingAnswers: [],\n    userSelectedAnswer: \"\",\n    failedQuestions: [],\n    quizCompleted: false,\n    percentageCompleted: 0,\n  };\n\n  componentDidMount() {\n    this.getQuestions()\n  }\n\n  getQuestions() {\n    if (this.props.location.state) {\n      axios\n        .get(\"/\" + this.props.location.state.selectedCategory + \".json\")\n        .then((response) => {\n          const questions = [];\n          response.data.map((res) => {\n            questions.push(res);\n          });\n          this.setState({ questions: questions });\n          this.loadQuestion(this.state.questions);\n        });\n    }\n  }\n\n  loadQuestion(array) {\n    const randomCount = Math.floor(Math.random() * (array.length - 1));\n    const questionObject = array[randomCount];\n    const answers = [\n      questionObject.correct_answer,\n      ...questionObject.incorrect_answers,\n    ];\n    this.setState({\n      viewingQuestion: questionObject.question,\n      viewingAnswers: shuffle(answers),\n      correctAnswer: questionObject.correct_answer,\n    });\n  }\n\n  handleSelectAnswer(event) {\n    if (event.target.value === this.state.correctAnswer) {\n      const newScore = this.state.score + 1;\n      this.setState({ score: newScore });\n    } else {\n      const q = [...this.state.failedQuestions, this.state.viewingQuestion];\n      this.setState({ failedQuestions: q });\n    }\n    \n    const remainingQuestions = this.state.questions.filter(\n      (ques) => ques.question !== this.state.viewingQuestion\n    );\n    this.setState({ questions: remainingQuestions });\n    const percentage = ((50-remainingQuestions.length) / 50)*100\n    if (remainingQuestions.length >= 1) {\n      this.loadQuestion(remainingQuestions);\n      this.setState({percentageCompleted: percentage.toFixed(0)})\n    } else {\n      this.setState({ quizCompleted: true, percentageCompleted: 100 });\n    }\n  }\n\n  handleQuizReset() {\n    this.setState({\n      score: 0,\n      questions: [],\n      viewingQuestion: \"\",\n      correctAnswer: \"\",\n      viewingAnswers: [],\n      userSelectedAnswer: \"\",\n      failedQuestions: [],\n      quizCompleted: false,\n      percentageCompleted: 0\n    })\n    this.getQuestions()\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.questions.length && this.state.viewingQuestion && (\n          <React.Fragment>\n          <ProgressBar completed={this.state.percentageCompleted}/>\n          <div className={(cx(globalStyles[\"container-fluid\"]))}>\n            <div className={(cx(localStyles[\"section\"], localStyles[\"questions\"]))}>\n              <h3>{this.state.viewingQuestion}</h3>\n              <div className={(cx(localStyles[\"Answers\"]))}>\n                {this.state.viewingAnswers.map((answer) => {\n                  return (\n                    <React.Fragment key={answer}>\n                      <button\n                        key={answer}\n                        className={(cx(globalStyles[\"btn\"], localStyles[\"selectAnswer\"]))}\n                        value={answer}\n                        onClick={(event) => this.handleSelectAnswer(event)}\n                      >\n                        {answer}\n                      </button>\n                    </React.Fragment>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n          </React.Fragment>\n        )}\n        {this.state.quizCompleted && (\n          <QuizCompletion\n            selectedCategory={this.props.location.state.category[0]}\n            score={this.state.score}\n            failedQuestions={this.state.failedQuestions}\n            handleQuizReset={() => this.handleQuizReset()}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default QuizPage;\n","/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/components/QuizPage/QuizCompletion/QuizCompletion.js",[],"/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/hoc/Layout/Layout.js",[],"/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/components/Logo/Logo.js",[],"/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/components/Navigation/Toolbar/Toolbar.js",[],"/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/components/Navigation/NavigationItems.js",[],"/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/components/Navigation/NavigationItem/NavigationItem.js",[],["75","76"],"/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/components/UI/Buttons/Buttons.js",[],"/Users/sarapereira/Desktop/Courses/Projects/triviaboard-reactjs/src/components/QuizPage/ProgressBar/ProgressBar.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"77","replacedBy":"81"},{"ruleId":"79","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":48,"column":35,"nodeType":"85","messageId":"86","endLine":48,"endColumn":37},{"ruleId":"77","replacedBy":"87"},{"ruleId":"79","replacedBy":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],["89"],["90"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["89"],["90"],"no-global-assign","no-unsafe-negation"]